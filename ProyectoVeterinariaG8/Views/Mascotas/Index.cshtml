@using System.Security.Claims
@model IEnumerable<ProyectoVeterinariaG8.DAL.Mascota>

@{
    ViewData["Title"] = "Mascotas";
}

<h1>Mascotas</h1>

<hr />

<div class="d-flex flex-wrap justify-content-between">
    <a class="btn btn-primary my-3" asp-action="Create">Crear Mascota</a>
    <div>
        @{
            var identidad = User.Identity as ClaimsIdentity;
            var roles = identidad.Claims.Where(c => c.Type == ClaimTypes.Role).ToList();
            var nombresRoles = roles.Select(r => r.Value);
        }
        <a class="btn btn-outline-dark my-3" asp-controller="MascotasPadecimientos" asp-action="Index">Padecimientos</a>
        <a class="btn btn-outline-dark my-3" asp-controller="MascotasVacunas" asp-action="Index">Vacunas</a>
        <a class="btn btn-outline-dark my-3" asp-controller="MascotasImagenes" asp-action="Index">Imágenes</a>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.MascotaId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Nombre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TipoMascota)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RazaMascota)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Genero)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Edad)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Peso)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EstadoId)
            </th>
            @{
                if (nombresRoles.Contains("Veterinario") || nombresRoles.Contains("Administrador"))
                {
                    <th>
                        @Html.DisplayNameFor(model => model.UsuarioPropietarioId)
                    </th>
                }
            }
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.MascotaId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TipoMascota.Descripcion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RazaMascota.Descripcion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genero)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Edad)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Peso)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EstadoMascota.Descripcion)
            </td>
                @{
                    if (nombresRoles.Contains("Veterinario") || nombresRoles.Contains("Administrador"))
                    {
                        <td>
                            @Html.DisplayFor(modelItem => item.UsuarioPropietarioId)
                        </td>
                    }
                }
            <td>
                    <a asp-action="Edit" asp-route-id="@item.MascotaId" class="btn btn-outline-primary btn-sm">Editar</a> |
                    <a asp-action="Details" asp-route-id="@item.MascotaId" class="btn btn-outline-secondary btn-sm">Detalles</a> |
                    <a asp-action="Delete" asp-route-id="@item.MascotaId" class="btn btn-outline-danger btn-sm">Eliminar</a>
            </td>
        </tr>
}
    </tbody>
</table>
